{"version":3,"sources":["Components/Admin/Nav.tsx","Components/Admin/Category.tsx","Components/Admin/SubCategory.tsx","Components/Admin/Spreadsheet.tsx","Components/Admin/DataEntry.tsx","Components/Admin/AdminArea.tsx","Components/Admin.tsx","App.tsx"],"names":["Nav","React","useState","undefined","selectedIndex","setSelectedIndex","url","useRouteMatch","history","useHistory","onSelect","index","row","push","title","Category","SubCategory","StyleSheet","create","data","value","DataGrid","columnLabels","DataEntry","AdminArea","match","useEffect","console","log","path","render","props","Admin","style","styles","container","View","nav","flex","backgroundColor","justifyContent","flexDirection","width","height","shadowOffset","shadowOpacity","shadowRadius","shadowColor","App","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.15e371b5.chunk.js","sourcesContent":["import React from 'react';\nimport {IndexPath, Menu, MenuItem} from '@ui-kitten/components';\n// @ts-ignore\nimport {useHistory, useRouteMatch} from \"../../Routers/routing\";\n\nexport const Nav = () => {\n\n    const [selectedIndex, setSelectedIndex] = React.useState<IndexPath | undefined>(undefined);\n    let {url} = useRouteMatch();\n    let history = useHistory();\n\n    function onSelectMenu(index: IndexPath) {\n        switch (index.row) {\n            case 0:\n                history.push(`${url}/category`);\n                break;\n            case 1:\n                history.push(`${url}/sub-category`);\n                break;\n            case 2:\n                history.push(`${url}/data-entry`);\n                break;\n        }\n        setSelectedIndex(index);\n    }\n\n\n    return (\n        <Menu\n            selectedIndex={selectedIndex}\n            onSelect={onSelectMenu}\n        >\n            <MenuItem title='Add Category'/>\n            <MenuItem title='Add Sub Category'/>\n            <MenuItem title='Data Entry'/>\n        </Menu>\n    );\n};\n\n","import {Layout, Text} from \"@ui-kitten/components\";\nimport React from \"react\";\nimport {StyleSheet} from \"react-native\";\n\nconst Category = () => {\n    return (\n        <Layout>\n            {/*<View style={styles.nav}><Nav/></View>*/}\n            {/*<View style={styles.nav}><Nav/></View>*/}\n            <Text>Category</Text>\n        </Layout>\n    )\n}\nexport default Category;\n\nconst styles = StyleSheet.create({});\n\n\n","import {Layout, Text} from \"@ui-kitten/components\";\nimport React from \"react\";\nimport {StyleSheet} from \"react-native\";\n\nconst SubCategory = () => {\n    return (\n        <Layout>\n            {/*<View style={styles.nav}><Nav/></View>*/}\n            {/*<View style={styles.nav}><Nav/></View>*/}\n            <Text>SubCategory</Text>\n        </Layout>\n    )\n}\nexport default SubCategory;\n\nconst styles = StyleSheet.create({});\n\n\n","import React from \"react\";\nimport Spreadsheet from \"react-spreadsheet\";\n\nconst data = [\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n    [{value: \"Vanilla\"}, {value: \"Chocolate\"}],\n    [{value: \"Strawberry\"}, {value: \"Cookies\"}],\n];\n\nconst DataGrid = () => <Spreadsheet data={data} columnLabels={[\"sdfsdf\",\"sdfsdf\"]}/>;\nexport default DataGrid;","import {Layout} from \"@ui-kitten/components\";\nimport React from \"react\";\nimport {StyleSheet, View} from \"react-native\";\nimport DataGrid from \"./Spreadsheet\";\n\nconst DataEntry = () => {\n    return (\n        <Layout>\n            <DataGrid/>\n        </Layout>\n    )\n}\nexport default DataEntry;\n\nconst styles = StyleSheet.create({\n});\n\n\n","import React, {useEffect} from 'react';\n// @ts-ignore\nimport {Route, Switch, useRouteMatch} from \"../../Routers/routing\";\nimport Category from \"./Category\";\nimport SubCategory from \"./SubCategory\";\nimport DataEntry from \"./DataEntry\";\n\nexport const AdminArea = ({match}) => {\n\n    let { url } = useRouteMatch();\n\n    useEffect(() => {\n        console.log(match);\n    }, [])\n\n    return (\n        <Switch>\n            <Route path=\"/admin/category\" render={props => <Category {...props} />}/>\n            <Route path=\"/admin/sub-category\" render={props => <SubCategory {...props} />}/>\n            <Route path=\"/admin/data-entry\" render={props => <DataEntry {...props} />}/>\n        </Switch>\n    );\n};\n\n","import {Layout} from \"@ui-kitten/components\";\nimport React from \"react\";\nimport {StyleSheet, View} from \"react-native\";\nimport {Nav} from \"./Admin/Nav\";\nimport {AdminArea} from \"./Admin/AdminArea\";\n\nconst Admin = (props) => {\n    return (\n        <Layout style={styles.container}>\n            <View style={styles.nav}><Nav/></View>\n            <View><AdminArea {...props}/></View>\n        </Layout>\n    )\n}\nexport default Admin;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        justifyContent: 'flex-start',\n        flexDirection: \"row\"\n    },\n    nav: {\n        width: 250,\n        height: \"100%\",\n        shadowOffset: {\n            width: 0,\n            height: 8\n        },\n        shadowOpacity: 1,\n        shadowRadius: 20,\n        shadowColor: \"rgb(218,224,235)\"\n    }\n});\n\n\n","import React from 'react';\nimport {View} from 'react-native';\nimport ReactDom from \"react-dom\";\nimport {Route, Switch} from \"./Routers/routing\";\nimport Admin from \"./Components/Admin\";\n\nconst App = function () {\n    // const history = useHistory();\n    // setTimeout(() => {\n    //     history.push(\"/admin\")\n    // }, 0);\n    return (\n        <View style={{flex:1}}>\n            <Switch>\n                <Route path=\"/admin\" render={props => <Admin {...props} />}/>\n                {/*<Route path=\"/pokemon\" render={props => <Poke {...props} />}/>*/}\n            </Switch>\n        </View>\n    );\n}\n\nexport default App;\n\nexport function render() {\n    ReactDom.render(<App/>, document.getElementById(\"root\"));\n}\n"],"sourceRoot":""}